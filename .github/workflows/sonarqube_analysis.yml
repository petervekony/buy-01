name: SonarQube Analysis

on: [push]

jobs:
  sonarqube_scan:
    name: Run SonarQube Scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ["user-service", "product-service", "media-service", "angular"]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 17 for Java Projects
        if: matrix.project != 'angular'
        uses: actions/setup-java@v2
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Set up Node.js for Angular Project
        if: matrix.project == 'angular'
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Build and Test (Java Projects)
        if: matrix.project != 'angular'
        run: |
          cd ${{ matrix.project }}
          mvn package
          mvn test

      - name: Build and Test (Angular Project)
        if: matrix.project == 'angular'
        run: |
          cd angular
          npm install
          npm install -g @angular/cli
          ng test --watch=false --progress=false --browsers ChromeHeadless

      - name: Run SonarQube Scan (Custom Script)
        run: |
          chmod +x ./run_sonar_scanner.sh
          ./run_sonar_scanner.sh ${{ matrix.project }} "SONAR_SCANNER_ARGUMENTS"
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: http://64.226.78.45:9000
          SONAR_SCANNER_ARGUMENTS: >
            -Dsonar.projectKey=buy-01-${{ matrix.project }}
            -Dsonar.host.url=http://64.226.78.45:9000
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.testExecutionReportPaths=reports/test-report.xml
            -Dsonar.java.binaries=target/classes
